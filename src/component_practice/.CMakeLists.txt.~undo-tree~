(undo-tree-save-format-version . 1)
"c9a572239f33927f9bd90b10ebbde309e6eb6706"
[nil nil nil nil (26219 10347 386981 935000) 0 nil]
([nil nil ((nil rear-nonsticky nil 247 . 248) (#("
" 0 1 (fontified nil)) . -282) (247 . 283) 213 (t 26219 10283 446768 154000)) nil (26219 10347 386977 976000) 0 nil])
([nil nil ((#("ament" 0 5 (fontified t)) . 261) (undo-tree-id3 . -4) (undo-tree-id4 . -5)) nil (26219 10347 386972 115000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 261) (undo-tree-id2 . -1)) nil (26219 10347 386965 129000) 0 nil])
([nil nil ((#("cmake " 0 6 (fontified t)) . 261) (undo-tree-id0 . -5) (undo-tree-id1 . -6)) nil (26219 10347 386954 175000) 0 nil])
([nil nil ((261 . 268)) nil (26219 10347 386913 236000) 0 nil])
([nil nil ((403 . 407) (t 26219 10347 397349 596000)) nil (26219 10465 150686 210000) 0 nil])
([nil nil ((405 . 409)) nil (26219 10465 150683 682000) 0 nil])
([nil nil ((nil rear-nonsticky nil 277 . 278) (#("
" 0 1 (fontified nil)) . -307) (277 . 308) 251) nil (26219 10465 150680 884000) 0 nil])
([nil nil ((#("rclcpp " 0 7 (fontified t)) . 291) (undo-tree-id63 . -6)) nil (26219 10465 150676 300000) 0 nil])
([nil nil ((291 . 300)) nil (26219 10465 150671 19000) 0 nil])
([nil nil ((465 . 470) (#("i" 0 1 (fontified t)) . -465) (undo-tree-id59 . -1) (#("n" 0 1 (fontified t)) . -466) (undo-tree-id60 . -1) 467 (458 . 467) (#(" " 0 1 (fontified t)) . -458) (undo-tree-id61 . -1) 459 (452 . 459) (451 . 453) (#(" " 0 1 (fontified t)) . -451) (undo-tree-id62 . -1) 452 (441 . 452)) nil (26219 10465 150666 359000) 0 nil])
([nil nil ((468 . 471) (#("r" 0 1 (fontified t)) . -468) (undo-tree-id57 . -1) (#("s" 0 1 (fontified t)) . -469) (undo-tree-id58 . -1) 470) nil (26219 10465 150651 878000) 0 nil])
([nil nil ((520 . 521) (499 . 520) (498 . 500) (#(" " 0 1 (fontified t)) . -498) (undo-tree-id54 . -1) 499 (485 . 499) (#(" " 0 1 (fontified t)) . -485) (undo-tree-id55 . -1) 486 (482 . 486) (#("e" 0 1 (fontified t)) . -482) (undo-tree-id56 . -1) 483 (473 . 483) (472 . 473)) nil (26219 10465 150643 64000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -569) (569 . 570) (#("}" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -569) (569 . 570) (560 . 570) (551 . 560) (548 . 551) (542 . 548) (539 . 542) (532 . 539) (531 . 533) (524 . 531) (522 . 524)) nil (26219 10465 150631 169000) 0 nil])
([nil nil ((577 . 581) (576 . 577) (#(")" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t)) . -576) (undo-tree-id50 . -1) (#("_" 0 1 (fontified t)) . -577) (undo-tree-id51 . -1) 578 (576 . 578) (#(")" 0 1 (face font-lock-variable-name-face fontified nil)) . -576) (576 . 577) (#(" " 0 1 (fontified t)) . -576) (undo-tree-id52 . -1) 577 (570 . 577) (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -570) (undo-tree-id53 . -1) 571 (569 . 571)) nil (26219 10465 150621 742000) 0 nil])
([nil nil ((605 . 606) (583 . 585)) nil (26219 10465 150608 447000) 0 nil])
([nil nil ((#("
if(BUILD_TESTING)k
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

" 0 1 (fontified t) 1 3 (face font-lock-keyword-face fontified t) 3 4 (face (rainbow-delimiters-depth-1-face) fontified t) 4 17 (fontified t) 17 18 (face (rainbow-delimiters-depth-1-face) fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 22 (fontified t) 22 34 (face font-lock-function-name-face fontified t) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t) 35 59 (fontified t) 59 60 (face (rainbow-delimiters-depth-1-face) fontified t) 60 63 (fontified t) 63 129 (face font-lock-comment-face fontified t) 129 131 (fontified t) 131 208 (face font-lock-comment-face fontified t) 208 210 (fontified t) 210 213 (face font-lock-function-name-face fontified t) 213 214 (face (rainbow-delimiters-depth-1-face) fontified t) 214 246 (fontified t) 246 247 (face (rainbow-delimiters-depth-1-face) fontified t) 247 250 (fontified t) 250 312 (face font-lock-comment-face fontified t) 312 314 (fontified t) 314 368 (face font-lock-comment-face fontified t) 368 376 (face font-lock-comment-face fontified t) 376 377 (face font-lock-comment-face fontified t) 377 379 (fontified t) 379 434 (face font-lock-comment-face fontified t) 434 436 (fontified t) 436 439 (face font-lock-function-name-face fontified t) 439 440 (face (rainbow-delimiters-depth-1-face) fontified t) 440 470 (fontified t) 470 471 (face (rainbow-delimiters-depth-1-face) fontified t) 471 474 (fontified t) 474 500 (face font-lock-function-name-face fontified t) 500 502 (face font-lock-function-name-face fontified t) 502 512 (face font-lock-function-name-face fontified t) 512 513 (face (rainbow-delimiters-depth-1-face) fontified t) 513 514 (face (rainbow-delimiters-depth-1-face) fontified t) 514 515 (fontified t) 515 520 (face font-lock-keyword-face fontified t) 520 521 (fontified t face (rainbow-delimiters-depth-1-face)) 521 522 (fontified t face (rainbow-delimiters-depth-1-face)) 522 523 (fontified t) 523 524 (fontified t)) . 587) (undo-tree-id34 . -523) (undo-tree-id35 . 505) (undo-tree-id36 . -523) (undo-tree-id37 . -523) (undo-tree-id38 . -341) (undo-tree-id39 . -503) (undo-tree-id40 . -522) (undo-tree-id41 . -341) (undo-tree-id42 . -247) (undo-tree-id43 . -522) (undo-tree-id44 . -207) (undo-tree-id45 . -247) (undo-tree-id46 . -18) (undo-tree-id47 . -207) (undo-tree-id48 . -523) (undo-tree-id49 . -523) 1110) nil (26219 10465 150603 527000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 585) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1)) nil (26219 10465 150569 812000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 584) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1)) nil (26219 10465 150551 724000) 0 nil])
([nil nil ((584 . 588) (t 26219 10465 162952 576000)) nil (26219 10583 65121 582000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -634) (634 . 635) (#("}" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -634) (634 . 635) (633 . 635) (#("P" 0 1 (fontified t)) . -633) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (#("R" 0 1 (fontified t)) . -634) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (#("O" 0 1 (fontified t)) . -635) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) 636 (631 . 636) (614 . 631) (611 . 614) (605 . 611) (602 . 605) (593 . 602) (585 . 594)) nil (26219 10583 65109 341000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -636) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) 637 (636 . 637)) nil (26219 10583 64608 320000) 0 nil])
([nil nil ((635 . 646) (#("O" 0 1 (face font-lock-variable-name-face fontified t)) . -635) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) 636 (634 . 636)) nil (26219 10583 64586 473000) 0 nil])
([nil nil ((nil rear-nonsticky nil 309 . 310) (#("
" 0 1 (fontified nil)) . -341) (309 . 342) 278 (t 26219 10583 103419 745000)) nil (26219 11619 40747 869000) 0 nil])
([nil nil ((#("std" 0 3 (fontified t)) . 323) (undo-tree-id147 . -2) (undo-tree-id148 . -3)) nil (26219 11619 40743 952000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 323) (undo-tree-id146 . -1)) nil (26219 11619 40738 742000) 0 nil])
([nil nil ((#("msgs " 0 5 (fontified t)) . 323) (undo-tree-id144 . -4) (undo-tree-id145 . -5)) nil (26219 11619 40732 526000) 0 nil])
([nil nil ((323 . 324)) nil (26219 11619 40707 188000) 0 nil])
([nil nil ((nil rear-nonsticky nil 340 . 341) (nil fontified nil 323 . 341) (323 . 341) 322) nil (26219 11619 40696 792000) 0 nil])
([nil nil ((#(" " 0 1 (rear-nonsticky t fontified t)) . 340) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (t 26219 11619 50323 142000)) nil (26219 11622 102608 475000) 0 nil])
([nil nil ((nil rear-nonsticky nil 536 . 537) (nil fontified nil 477 . 537) (477 . 537) (t 26219 11622 138375 80000)) nil (26219 11653 736663 349000) 0 nil])
([nil nil ((#("add_library(vincent_driver_component src/vincent_driver.cpp)
" 0 11 (face font-lock-function-name-face fontified t) 11 12 (face (rainbow-delimiters-depth-1-face) fontified t) 12 59 (fontified t) 59 60 (face (rainbow-delimiters-depth-1-face) rear-nonsticky t fontified t) 60 61 (fontified t)) . 477) (undo-tree-id165 . -60) (undo-tree-id166 . -12) (undo-tree-id167 . -59) (undo-tree-id168 . -59) (undo-tree-id169 . -59) (undo-tree-id170 . -59) (undo-tree-id171 . -59) (undo-tree-id172 . -59) (undo-tree-id173 . -59) (undo-tree-id174 . -59) (undo-tree-id175 . -59) (undo-tree-id176 . -59) (undo-tree-id177 . -59) (undo-tree-id178 . -12) (undo-tree-id179 . -12) (undo-tree-id180 . -12) (undo-tree-id181 . -12) (undo-tree-id182 . -12) (undo-tree-id183 . -12) (undo-tree-id184 . -12) (undo-tree-id185 . -12) (undo-tree-id186 . -61) 489) nil (26219 11653 736658 240000) 0 nil])
([nil nil ((512 . 513)) nil (26219 11653 736622 862000) 0 nil])
([nil nil ((nil rear-nonsticky nil 512 . 513) (#("
" 0 1 (fontified nil)) . -548) (512 . 549) 477) nil (26219 11653 736620 397000) 0 nil])
([nil nil ((477 . 478) (#("$" 0 1 (fontified t)) . -477) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) 478 (477 . 478)) nil (26219 11653 736615 604000) 0 nil])
([nil nil ((#("executable" 0 10 (face font-lock-function-name-face fontified t)) . 518) (undo-tree-id151 . -9) (undo-tree-id152 . -10)) nil (26219 11653 736590 577000) 0 nil])
([nil nil ((518 . 525)) nil (26219 11653 736568 843000) 0 nil])
([nil nil ((532 . 542)) nil (26219 11653 736558 886000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 557) (undo-tree-id221 . -1) (t 26219 11653 746880 793000)) nil (26219 11666 274034 418000) 0 nil])
([nil nil ((616 . 623) (#("p" 0 1 (fontified t)) . -616) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (#("o" 0 1 (fontified t)) . -617) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) 618 (605 . 618)) nil (26219 11666 274020 755000) 0 nil])
([nil nil ((624 . 626) (t 26219 11666 311069 476000)) nil (26219 11750 865902 24000) 0 nil])
([nil nil ((nil rear-nonsticky nil 755 . 756) (nil fontified nil 626 . 756) (626 . 756)) nil (26219 11750 865899 613000) 0 nil])
([nil nil ((#("vincent" 0 7 (fontified t)) . 663) (undo-tree-id229 . -6)) nil (26219 11750 865896 484000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 663)) nil (26219 11750 865893 115000) 0 nil])
([nil nil ((#("driver" 0 6 (fontified t)) . 663) (undo-tree-id228 . -5)) nil (26219 11750 865891 154000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 663)) nil (26219 11750 865887 672000) 0 nil])
([nil nil ((#("component" 0 9 (fontified t)) . 663) (undo-tree-id227 . -8)) nil (26219 11750 865885 403000) 0 nil])
([nil nil ((594 . 599) (#("i" 0 1 (fontified t)) . -594) (undo-tree-id225 . -1) (#("o" 0 1 (fontified t)) . -595) (undo-tree-id226 . -1) 596 (589 . 596)) nil (26219 11750 865879 880000) 0 nil])
([nil nil ((nil rear-nonsticky nil 688 . 689) (nil fontified nil 673 . 689) (673 . 689) 672) nil (26219 11750 865871 803000) 0 nil])
([nil nil ((#("palomino" 0 8 (face font-lock-string-face fontified t)) . 702) (undo-tree-id224 . -7)) nil (26219 11750 865868 444000) 0 nil])
([nil nil ((#("::" 0 2 (face font-lock-string-face fontified t)) . 702) (undo-tree-id223 . -1)) nil (26219 11750 865863 940000) 0 nil])
([nil nil ((#("VincentDriver" 0 13 (face font-lock-string-face fontified t)) . 702) (undo-tree-id222 . -12)) nil (26219 11750 865856 965000) 0 nil])
([nil nil ((nil rear-nonsticky nil 727 . 728) (nil fontified nil 702 . 728) (702 . 728) 701) nil (26219 11750 865827 617000) 0 nil])
([nil nil ((#("vincent" 0 7 (fontified t)) . 745) (undo-tree-id238 . -6) (undo-tree-id239 . -7) (t 26219 11750 872184 572000)) nil (26219 11759 289824 944000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 745) (undo-tree-id237 . -1)) nil (26219 11759 289818 651000) 0 nil])
([nil nil ((#("driver" 0 6 (fontified t)) . 745) (undo-tree-id230 . -5) (undo-tree-id231 . -5) (undo-tree-id232 . -5) (undo-tree-id233 . -5) (undo-tree-id234 . -5) (undo-tree-id235 . -5) (undo-tree-id236 . -6)) nil (26219 11759 289811 854000) 0 nil])
([nil nil ((744 . 751)) nil (26219 11759 289773 136000) 0 nil])
([nil nil ((apply -6 755 823 undo--wrap-and-run-primitive-undo 755 823 ((785 . 787) (774 . 776) (756 . 758) 755)) (t 26219 11759 324283 116000)) nil (26219 11763 290304 250000) 0 nil])
([nil nil ((821 . 823) (t 26219 11763 324329 33000)) nil (26219 11817 967578 159000) 0 nil])
([nil nil ((apply 6 756 818 undo--wrap-and-run-primitive-undo 756 818 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -781) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -772) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -756)))) nil (26219 11817 967576 147000) 0 nil])
([nil nil ((#("DESTINATION lib/${PROJECT_NAME}" 0 17 (fontified t) 17 18 (face (rainbow-delimiters-depth-2-face) fontified t) 18 30 (face font-lock-variable-name-face fontified t) 30 31 (face (rainbow-delimiters-depth-2-face) fontified t)) . 783) (undo-tree-id358 . -30) (undo-tree-id359 . -30) (undo-tree-id360 . -30) (undo-tree-id361 . -30) (undo-tree-id362 . -31) (undo-tree-id363 . -30) (undo-tree-id364 . -30) (undo-tree-id365 . -31) (undo-tree-id366 . -31) 813) nil (26219 11817 967573 194000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -782) (undo-tree-id344 . -2) (undo-tree-id345 . -2) (undo-tree-id346 . -2) (undo-tree-id347 . -2) (undo-tree-id348 . -2) (undo-tree-id349 . -2) (undo-tree-id350 . -2) 784 (782 . 784) (#("  " 0 2 (fontified nil)) . 781) (undo-tree-id351 . -2) (undo-tree-id352 . -2) (undo-tree-id353 . -2) (undo-tree-id354 . -2) (undo-tree-id355 . -2) (undo-tree-id356 . -2) (undo-tree-id357 . -2) (780 . 784)) nil (26219 11817 967556 79000) 0 nil])
([nil nil ((nil rear-nonsticky nil 876 . 877) (nil fontified nil 782 . 877) (782 . 877)) nil (26219 11817 967530 247000) 0 nil])
([nil nil ((#("      " 0 6 (fontified t)) . -784) 812) nil (26219 11817 967527 347000) 0 nil])
([nil nil ((#("      " 0 6 (fontified t)) . -810) 832) nil (26219 11817 967523 870000) 0 nil])
([nil nil ((#("      " 0 6 (fontified t)) . -836) 852) nil (26219 11817 967520 44000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 781) (undo-tree-id240 . -1) (undo-tree-id241 . 1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1)) nil (26219 11817 967501 17000) 0 nil])
([nil nil ((nil rear-nonsticky nil 807 . 808) (nil fontified nil 755 . 808) (755 . 808) (t 26219 11817 968913 954000)) nil (26219 11876 630833 878000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -759) (undo-tree-id407 . -2) (undo-tree-id408 . -2) (undo-tree-id409 . -2) (undo-tree-id410 . -2) (undo-tree-id411 . -2) (undo-tree-id412 . -2) (undo-tree-id413 . -2) 761 (759 . 761) (753 . 757) (754 . 755)) nil (26219 11876 630829 865000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -816) (undo-tree-id400 . -2) (undo-tree-id401 . -2) (undo-tree-id402 . -2) (undo-tree-id403 . -2) (undo-tree-id404 . -2) (undo-tree-id405 . -2) (undo-tree-id406 . -2) 818 (816 . 818) (760 . 762) (813 . 814)) nil (26219 11876 630813 626000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -671) (undo-tree-id392 . -2) (undo-tree-id393 . -2) (undo-tree-id394 . -2) (undo-tree-id395 . -2) (undo-tree-id396 . -2) (undo-tree-id397 . -2) (undo-tree-id398 . -2) (undo-tree-id399 . -2) 673) nil (26219 11876 630798 869000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -690) (undo-tree-id387 . -2) (undo-tree-id388 . -2) (undo-tree-id389 . -2) (undo-tree-id390 . -2) (undo-tree-id391 . -2)) nil (26219 11876 630781 204000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -728) (undo-tree-id382 . -2) (undo-tree-id383 . -2) (undo-tree-id384 . -2) (undo-tree-id385 . -2) (undo-tree-id386 . -2)) nil (26219 11876 630771 67000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -749)) nil (26219 11876 630760 525000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -752)) nil (26219 11876 630757 659000) 0 nil])
([nil nil ((#("vincent" 0 7 (fontified t)) . 780) (undo-tree-id380 . -6) (undo-tree-id381 . -7)) nil (26219 11876 630755 334000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 780) (undo-tree-id379 . -1)) nil (26219 11876 630749 915000) 0 nil])
([nil nil ((#("driver" 0 6 (fontified t)) . 780) (undo-tree-id377 . -5) (undo-tree-id378 . -6)) nil (26219 11876 630746 108000) 0 nil])
([nil nil ((780 . 786)) nil (26219 11876 630741 151000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -824) (undo-tree-id370 . -2) (undo-tree-id371 . -2) (undo-tree-id372 . -2) (undo-tree-id373 . -2) (undo-tree-id374 . -2) (undo-tree-id375 . -2) (undo-tree-id376 . -2) 826 (823 . 826)) nil (26219 11876 630738 63000) 0 nil])
([nil nil ((nil rear-nonsticky nil 846 . 847) (nil fontified nil 824 . 847) (824 . 847)) nil (26219 11877 914968 449000) 0 nil])
([nil nil ((824 . 825)) nil (26219 11884 823322 89000) 0 nil] [nil nil ((nil rear-nonsticky nil 830 . 831) (nil fontified nil 825 . 831) (825 . 831) 824) ((#("EXPORT" 0 5 (fontified nil) 5 6 (rear-nonsticky nil fontified nil)) . 825) (undo-tree-id427 . -5) (undo-tree-id428 . -5) (undo-tree-id429 . -5) (undo-tree-id430 . -5) (undo-tree-id431 . -5) (undo-tree-id432 . -5) (undo-tree-id433 . -5) (undo-tree-id434 . -5) (undo-tree-id435 . -5) (undo-tree-id436 . -5) (undo-tree-id437 . -5) (undo-tree-id438 . -5) (nil rear-nonsticky t 830 . 831)) (26219 11877 149448 863000) 0 nil])
([nil nil ((nil rear-nonsticky nil 830 . 831) (nil fontified nil 825 . 831) (825 . 831) 824) nil (26219 11884 823319 771000) 0 nil])
([nil nil ((824 . 826) 830) ((#("  " 0 2 (fontified t)) . 824) (undo-tree-id414 . -2) (undo-tree-id415 . -2) (undo-tree-id416 . -2) (undo-tree-id417 . -2) (undo-tree-id418 . -2) (undo-tree-id419 . -2) (undo-tree-id420 . -2) (undo-tree-id421 . -2) (undo-tree-id422 . -2) (undo-tree-id423 . -2) (undo-tree-id424 . -2) (undo-tree-id425 . -2) (undo-tree-id426 . -2)) (26219 11876 630986 414000) 0 nil])
([nil nil ((831 . 832)) nil (26219 11884 823316 431000) 0 nil])
([nil nil ((826 . 827) (#("e" 0 1 (fontified t)) . 826) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1)) ((826 . 827) (#("e" 0 1 (fontified t)) . 826)) (26219 11876 630702 101000) 0 nil])
([nil nil ((825 . 826) 831) nil (26219 11884 823313 678000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . 832) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1)) nil (26219 11884 823307 332000) 0 nil])
([nil nil ((832 . 833)) nil (26219 11884 823268 823000) 0 nil])
([nil nil ((nil rear-nonsticky nil 350 . 351) (#("
" 0 1 (fontified nil)) . -391) (350 . 392) 310 (t 26219 11884 833538 123000)) nil (26219 12430 61501 285000) 0 nil])
([nil nil ((#("rclcpp" 0 6 (fontified t)) . 364) (undo-tree-id449 . -5) (undo-tree-id450 . -6)) nil (26219 12430 61497 7000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 364) (undo-tree-id448 . -1)) nil (26219 12430 61491 226000) 0 nil])
([nil nil ((#("components " 0 10 (fontified t) 10 11 (fontified t)) . 364) (undo-tree-id446 . -10) (undo-tree-id447 . -11)) nil (26219 12430 61484 263000) 0 nil])
([nil nil ((364 . 376)) nil (26219 12430 61453 592000) 0 nil])
([nil nil ((511 . 513) (t 26219 12430 98988 318000)) nil (26219 13176 849245 188000) 0 nil])
([nil nil ((530 . 537) (529 . 531) (#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -529) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) 530 (529 . 530) (#(")" 0 1 (fontified nil)) . -529) (521 . 530) (512 . 521)) nil (26219 13176 849235 187000) 0 nil])
([nil nil ((528 . 531) (#("y" 0 1 (face font-lock-function-name-face fontified t)) . -528) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) 529 (t 26219 13176 888209 982000)) nil (26219 13187 680330 480000) 0 nil])
([nil nil ((607 . 614) (t 26219 13187 688068 487000)) nil (26219 13210 948103 955000) 0 nil])
([nil nil ((707 . 709) (t 26219 13210 951770 794000)) nil (26219 13303 458668 192000) 0 nil])
([nil nil ((732 . 735) (728 . 732) (707 . 728)) nil (26219 13303 458663 941000) 0 nil])
([nil nil ((nil rear-nonsticky nil 750 . 751) (nil fontified nil 734 . 751) (734 . 751) 733) nil (26219 13303 458657 708000) 0 nil])
([nil nil ((771 . 784) (767 . 771) (#("T" 0 1 (face font-lock-string-face fontified t)) . -767) (undo-tree-id484 . -1) (#("O" 0 1 (face font-lock-string-face fontified t)) . -768) (undo-tree-id485 . -1) 769 (763 . 769) (760 . 763) (759 . 761) (#("\"" 0 1 (fontified nil)) . -759) (751 . 760)) nil (26219 13303 458639 87000) 0 nil])
([nil nil ((786 . 787) (t 26219 13303 502675 107000)) nil (26219 13336 192924 584000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 787) (undo-tree-id522 . 1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1)) nil (26219 13336 192921 209000) 0 nil])
([nil nil ((904 . 906)) nil (26219 13388 277043 79000) 0 nil])
([nil nil ((#("  EXECUTABLE talker 
" 0 20 (fontified t) 20 21 (fontified t)) . 879) (undo-tree-id529 . -20) (undo-tree-id530 . -21) (undo-tree-id531 . -21) (undo-tree-id532 . -21) (undo-tree-id533 . -21) (undo-tree-id534 . -21) (undo-tree-id535 . -21) (t 26219 13390 69762 774000)) nil (26219 13397 178704 526000) 0 nil] [nil nil ((#("  EXECUTABLE talker 
" 0 20 (fontified t) 20 21 (fontified t)) . 879) (undo-tree-id486 . -20) (undo-tree-id487 . -19) (undo-tree-id488 . -21) (undo-tree-id489 . -21) (undo-tree-id490 . -21) (undo-tree-id491 . -21) (undo-tree-id492 . -21) (undo-tree-id493 . -21) (undo-tree-id494 . -21) (undo-tree-id495 . -21) (undo-tree-id496 . -21) (undo-tree-id497 . -21) (undo-tree-id498 . -19) (undo-tree-id499 . -19) (undo-tree-id500 . -19) (undo-tree-id501 . -19) (undo-tree-id502 . -19) (undo-tree-id503 . -2) (undo-tree-id504 . -2) (undo-tree-id505 . -2) (undo-tree-id506 . -2) (undo-tree-id507 . -2) (undo-tree-id508 . -19) (undo-tree-id509 . -19) (undo-tree-id510 . -19) (undo-tree-id511 . -19) (undo-tree-id512 . -19) (undo-tree-id513 . -19) (undo-tree-id514 . -19) (undo-tree-id515 . -19) (undo-tree-id516 . -19) (undo-tree-id517 . -19) (undo-tree-id518 . -19) (undo-tree-id519 . -19) (undo-tree-id520 . -19) (undo-tree-id521 . -21) 898) ((879 . 900) (t 26219 13336 234318 378000)) (26219 13336 192895 317000) 0 nil])
([nil nil ((apply -14 933 1088 undo--wrap-and-run-primitive-undo 933 1088 ((1081 . 1083) (1053 . 1055) (1025 . 1027) (997 . 999) (962 . 964) (951 . 953) (933 . 935) 1074))) nil (26219 13397 178660 47000) 0 nil])
nil
([nil nil ((apply -2 885 935 undo--wrap-and-run-primitive-undo 885 935 ((886 . 888) 885)) (t 26219 13397 189692 13000)) nil (26219 13400 889545 257000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -904) (904 . 905) (#("}" 0 1 (face font-lock-string-face fontified nil)) . -904) (904 . 905) (903 . 905) (#("o" 0 1 (face font-lock-string-face fontified t)) . -903) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) 904 (902 . 904) (901 . 903) (#("\"" 0 1 (fontified nil)) . -901) (892 . 902) (888 . 892) (884 . 889) (t 26219 13400 901655 367000)) nil (26219 13475 329341 473000) 0 nil])
([nil nil ((904 . 916)) nil (26219 13475 329325 109000) 0 nil])
([nil nil ((943 . 947) (935 . 943) (917 . 935) (#("c" 0 1 (face font-lock-string-face fontified t)) . -917) (undo-tree-id537 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -918) (undo-tree-id538 . -1) 919 (917 . 919) (#("l" 0 1 (face font-lock-string-face fontified t)) . -917) (undo-tree-id539 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -918) (undo-tree-id540 . -1) (#("_" 0 1 (face font-lock-string-face fontified t)) . -919) (undo-tree-id541 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -920) (undo-tree-id542 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -921) (undo-tree-id543 . -1) (#("m" 0 1 (face font-lock-string-face fontified t)) . -922) (undo-tree-id544 . -1) 923 (917 . 923)) nil (26219 13475 329319 451000) 0 nil])
([nil nil ((957 . 977) (#(" " 0 1 (face font-lock-string-face fontified t)) . -957) (undo-tree-id536 . -1) 958 (955 . 958) (946 . 955)) nil (26219 13475 329121 479000) 0 nil])
([nil nil ((978 . 980)) nil (26219 13475 329094 121000) 0 nil])
([nil nil ((apply 14 1032 1174 undo--wrap-and-run-primitive-undo 1032 1174 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -1169) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -1143) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -1117) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -1091) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -1058) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -1049) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -1033) 1188)) (t 26219 13475 368953 318000)) nil (26219 13495 351434 621000) 0 nil])
([nil nil ((#("ament_target_dependencies(talker_component rclcpp std_msgs rclcpp_components)
" 0 25 (face font-lock-function-name-face fontified t) 25 26 (face (rainbow-delimiters-depth-1-face) fontified t) 26 76 (fontified t) 76 77 (face (rainbow-delimiters-depth-1-face) fontified t) 77 78 (fontified t)) . 629) (undo-tree-id552 . -77) (undo-tree-id553 . -41) (undo-tree-id554 . -42) (undo-tree-id555 . -78) (undo-tree-id556 . -78) (undo-tree-id557 . -78) (undo-tree-id558 . -78) (undo-tree-id559 . -78) (undo-tree-id560 . -78) (undo-tree-id561 . -78) (undo-tree-id562 . -78) (undo-tree-id563 . -78) (undo-tree-id564 . -78) (undo-tree-id565 . -78) (undo-tree-id566 . -78) (undo-tree-id567 . -78) (undo-tree-id568 . -78) (undo-tree-id569 . -78) (undo-tree-id570 . -78) (undo-tree-id571 . -78) (undo-tree-id572 . -78) (undo-tree-id573 . -78) (undo-tree-id574 . -78) (undo-tree-id575 . -78) (undo-tree-id576 . -78) (undo-tree-id577 . -78) (undo-tree-id578 . -78) (undo-tree-id579 . -78) (undo-tree-id580 . -78) (undo-tree-id581 . -78) (undo-tree-id582 . -78) (undo-tree-id583 . -78) (undo-tree-id584 . -78) (undo-tree-id585 . -78) (undo-tree-id586 . -78) (undo-tree-id587 . -78) (undo-tree-id588 . -78) (undo-tree-id589 . -78) (undo-tree-id590 . -78) (t 26219 13495 364774 897000)) nil (26219 13534 694660 247000) 0 nil])
([nil nil ((nil rear-nonsticky nil 709 . 710) (#("
" 0 1 (fontified nil)) . -787) (709 . 788)) nil (26219 13534 694529 903000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1174) (undo-tree-id591 . 1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (t 26219 13534 732435 64000)) nil (26219 13565 848654 400000) 0 nil])
([nil nil ((881 . 892) (878 . 881) (t 26219 13565 860176 485000)) nil (26219 13649 925959 774000) 0 nil])
([nil nil ((892 . 898)) nil (26219 13649 925948 792000) 0 nil])
([nil nil ((1080 . 1087) (#("i" 0 1 (fontified t)) . -1080) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) 1081 (1077 . 1081) (t 26219 13649 939518 450000)) nil (26219 13655 765527 102000) 0 nil])
([nil nil ((apply 2 1004 1051 undo--wrap-and-run-primitive-undo 1004 1051 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -1004))) (t 26219 13655 807474 564000)) nil (26219 13661 665525 581000) 0 nil])
([nil nil ((apply -2 903 1006 undo--wrap-and-run-primitive-undo 903 1006 ((904 . 906) 903)) (t 26219 13661 707430 683000)) nil (26219 14253 722482 39000) 0 nil])
([nil nil ((629 . 630) (t 26219 14253 732938 793000)) nil (26219 14324 495475 240000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 629) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (t 26219 14327 484749 966000)) nil (26219 14361 307763 225000) 0 nil] [nil nil ((#("SHARED " 0 7 (fontified t)) . 608) (undo-tree-id616 . -6) (undo-tree-id617 . -7)) ((608 . 615) (t 26219 14287 334510 633000)) (26219 14287 294159 393000) 0 nil])
([nil nil ((412 . 415) (399 . 412) (391 . 400) (#("a" 0 1 (fontified t)) . -391) (undo-tree-id35 . -1) 392 (386 . 392) (385 . 386) (t 26219 14361 345681 811000)) nil (26231 61822 866277 2000) 0 nil])
nil
([nil nil ((416 . 417)) nil (26231 61822 866268 866000) 0 nil])
([nil nil ((nil rear-nonsticky nil 416 . 417) (#("
" 0 1 (fontified nil)) . -447) (416 . 448) 386) nil (26231 61822 866265 594000) 0 nil])
([nil nil ((#("rclcpp" 0 6 (fontified t)) . 430) (undo-tree-id33 . -5) (undo-tree-id34 . -6)) nil (26231 61822 866260 672000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 430) (undo-tree-id32 . -1)) nil (26231 61822 866253 432000) 0 nil])
([nil nil ((439 . 444) (#("m" 0 1 (fontified t)) . -439) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("s" 0 1 (fontified t)) . -440) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 441 (439 . 441)) nil (26231 61822 866238 771000) 0 nil])
([nil nil ((415 . 424) (t 26231 61822 906896 359000)) nil (26231 61859 118496 874000) 0 nil])
([nil nil ((453 . 462)) nil (26231 61859 118486 123000) 0 nil])
([nil nil ((832 . 834) (#(" " 0 1 (fontified nil)) . 831) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (832 . 833) (t 26231 61859 127774 646000)) nil (26231 61902 697813 669000) 0 nil])
([nil nil ((841 . 843) (#(" " 0 1 (fontified nil)) . 840) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (841 . 842)) nil (26231 61902 697806 424000) 0 nil])
([nil nil ((852 . 854) (#(" " 0 1 (fontified nil)) . 851) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (852 . 853)) nil (26231 61902 697799 748000) 0 nil])
([nil nil ((871 . 874)) nil (26231 61902 697775 120000) 0 nil])
([nil nil ((nil rear-nonsticky nil 874 . 875) (nil fontified nil 874 . 875) (874 . 875) 873) nil (26231 61902 697771 828000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t rear-nonsticky t)) . 874)) nil (26231 61902 697766 50000) 0 nil])
([nil nil ((880 . 890) (874 . 880) (871 . 874)) nil (26231 61902 697762 348000) 0 nil])
([nil nil ((893 . 907) (890 . 893)) nil (26231 61902 697751 760000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . 908) (undo-tree-id75 . -1) (undo-tree-id76 . -2) (undo-tree-id77 . -2) (undo-tree-id78 . -2) (undo-tree-id79 . -2) (undo-tree-id80 . -2) (undo-tree-id81 . -2) (undo-tree-id82 . -2) (undo-tree-id83 . -2) (undo-tree-id84 . -2) (undo-tree-id85 . -2) (undo-tree-id86 . -2) (undo-tree-id87 . -2) (undo-tree-id88 . -2) (t 26231 61902 736831 681000)) nil (26231 61906 10804 489000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -907) (undo-tree-id42 . 1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) 908) nil (26231 61906 10765 671000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . 1020) (undo-tree-id184 . -1) (undo-tree-id185 . -2) (undo-tree-id186 . -2) (undo-tree-id187 . -2) (undo-tree-id188 . -2) (undo-tree-id189 . -2) (undo-tree-id190 . -2) (undo-tree-id191 . -2) (undo-tree-id192 . -2) (undo-tree-id193 . -2) (undo-tree-id194 . -2) (undo-tree-id195 . -2) (t 26231 61906 48911 949000)) nil (26231 61910 931631 505000) 0 nil])
([nil current ((#("
" 0 1 (fontified t)) . -1019) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (#("
" 0 1 (fontified t)) . -1020) (undo-tree-id146 . -1) (undo-tree-id147 . 1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (#(" " 0 1 (fontified t)) . -1021) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (#(" " 0 1 (fontified t)) . -1022) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) 1023 (1021 . 1023) (#("  " 0 2 (fontified nil)) . 1020) (1020 . 1022) (1020 . 1021)) nil (26231 61910 931592 845000) 0 nil])
nil
