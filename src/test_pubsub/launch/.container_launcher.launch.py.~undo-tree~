(undo-tree-save-format-version . 1)
"310a8b6ee0db75aadd0cc96565fc7c7e42abb2be"
[nil nil nil nil (26218 61237 711227 772000) 0 nil]
([nil nil ((#("from launch_ros.actions import ComposableNodeContainer
from launch_ros.descriptions import ComposableNode
# ..

def generate_launch_description():
    ld = LaunchDescription()
    
    ld.add_action(ComposableNodeContainer(
        name='a_buncha_nodes',
        namespace='',
        package='rclcpp_components',
        executable='tester',
    composable_node_descriptions=[
    ComposableNode(
        package='test_pubsub',
        plugin='no_message::NodeMsgNo',
        name='test_pubsub',
        # ..
        extra_arguments=[{'use_intra_process_comms': True}],
    ),
    ]
    ))

    return ld
    
" 0 4 (fontified t face font-lock-keyword-face) 4 24 (fontified t) 24 30 (fontified t face font-lock-keyword-face) 30 55 (fontified t) 55 59 (fontified t face font-lock-keyword-face) 59 84 (fontified t) 84 90 (fontified t face font-lock-keyword-face) 90 106 (fontified t) 106 108 (fontified t face font-lock-comment-delimiter-face) 108 111 (fontified t face font-lock-comment-face) 111 112 (fontified t) 112 115 (fontified t face font-lock-keyword-face) 115 116 (fontified t) 116 143 (fontified t face font-lock-function-name-face) 143 144 (fontified t face (rainbow-delimiters-depth-1-face)) 144 145 (fontified t face (rainbow-delimiters-depth-1-face)) 145 151 (fontified t) 151 153 (fontified t face font-lock-variable-name-face) 153 173 (fontified t) 173 174 (fontified t face (rainbow-delimiters-depth-1-face)) 174 175 (fontified t face (rainbow-delimiters-depth-1-face)) 175 198 (fontified t) 198 199 (fontified t face (rainbow-delimiters-depth-1-face)) 199 222 (fontified t) 222 223 (fontified t face (rainbow-delimiters-depth-2-face)) 223 237 (fontified t) 237 253 (fontified t face font-lock-string-face) 253 273 (fontified t) 273 275 (fontified t face font-lock-string-face) 275 293 (fontified t) 293 312 (fontified t face font-lock-string-face) 312 333 (fontified t) 333 341 (fontified t face font-lock-string-face) 341 376 (fontified t) 376 377 (fontified t face (rainbow-delimiters-depth-3-face)) 377 396 (fontified t) 396 397 (fontified t face (rainbow-delimiters-depth-4-face)) 397 414 (fontified t) 414 427 (fontified t face font-lock-string-face) 427 444 (fontified t) 444 467 (fontified t face font-lock-string-face) 467 482 (fontified t) 482 495 (fontified t face font-lock-string-face) 495 500 (fontified t) 500 505 (fontified t) 505 507 (fontified t face font-lock-comment-delimiter-face) 507 510 (fontified t face font-lock-comment-face) 510 534 (fontified t) 534 535 (fontified t face (rainbow-delimiters-depth-5-face)) 535 536 (fontified t face (rainbow-delimiters-depth-6-face)) 536 561 (fontified t face font-lock-string-face) 561 563 (fontified t) 563 567 (fontified t face font-lock-constant-face) 567 568 (fontified t face (rainbow-delimiters-depth-6-face)) 568 569 (fontified t face (rainbow-delimiters-depth-5-face)) 569 575 (fontified t) 575 576 (fontified t face (rainbow-delimiters-depth-4-face)) 576 582 (fontified t) 582 583 (fontified t face (rainbow-delimiters-depth-3-face)) 583 588 (fontified t) 588 589 (fontified t face (rainbow-delimiters-depth-2-face)) 589 590 (fontified t face (rainbow-delimiters-depth-1-face)) 590 596 (fontified t) 596 602 (fontified t face font-lock-keyword-face) 602 611 (fontified t)) . 1) (undo-tree-id0 . -611) (undo-tree-id1 . -611) (undo-tree-id2 . -3) (undo-tree-id3 . -180) (undo-tree-id4 . -3) (undo-tree-id5 . -3) (undo-tree-id6 . -611) (undo-tree-id7 . -469) (undo-tree-id8 . -611) (undo-tree-id9 . -610) 612 (t 26217 31812 855825 491000)) nil (26218 61237 711221 341000) 0 nil])
([nil nil ((nil rear-nonsticky nil 791 . 792) (nil fontified nil 1 . 792) (1 . 792)) nil (26218 61237 711157 222000) 0 nil])
([nil nil ((348 . 349) (t 26218 61237 719654 772000)) nil (26218 61288 171180 943000) 0 nil])
([nil nil ((348 . 349) (#("." 0 1 (fontified t)) . -348) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) 349) nil (26218 61288 171175 474000) 0 nil])
([nil nil ((390 . 391) (#("." 0 1 (fontified t)) . -390) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) 391 (390 . 391)) nil (26218 61288 171148 680000) 0 nil])
([nil nil ((#("container" 0 9 (fontified t face font-lock-string-face)) . 581) (undo-tree-id46 . -8) (undo-tree-id47 . -9) (t 26218 61288 208236 443000)) nil (26218 62312 35568 148000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-string-face)) . 580) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1)) nil (26218 62312 35552 536000) 0 nil])
([nil nil ((#("test" 0 4 (fontified t face font-lock-string-face)) . 569) (undo-tree-id72 . -3) (undo-tree-id73 . -4) (t 26218 62312 72287 489000)) nil (26218 62330 732081 548000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-string-face)) . 569) (undo-tree-id71 . -1)) nil (26218 62330 732075 462000) 0 nil])
([nil nil ((#("pubsub" 0 6 (fontified t face font-lock-string-face)) . 569) (undo-tree-id48 . -5) (undo-tree-id49 . -6) (undo-tree-id50 . -6) (undo-tree-id51 . -6) (undo-tree-id52 . -6) (undo-tree-id53 . -6) (undo-tree-id54 . -6) (undo-tree-id55 . -6) (undo-tree-id56 . -6) (undo-tree-id57 . -6) (undo-tree-id58 . -6) (undo-tree-id59 . -6) (undo-tree-id60 . -6) (undo-tree-id61 . -6) (undo-tree-id62 . -6) (undo-tree-id63 . -6) (undo-tree-id64 . -6) (undo-tree-id65 . -6) (undo-tree-id66 . -6) (undo-tree-id67 . -6) (undo-tree-id68 . -6) (undo-tree-id69 . -6) (undo-tree-id70 . -6)) nil (26218 62330 732226 104000) 0 nil])
([nil nil ((569 . 575)) nil (26218 63824 311990 675000) 0 nil] [nil nil ((516 . 519)) ((#("tes" 0 3 (fontified t)) . 516) (undo-tree-id74 . -2) (undo-tree-id75 . -2) (undo-tree-id76 . -2)) (26218 62330 731998 254000) 0 nil])
([nil nil ((nil rear-nonsticky nil 543 . 544) (nil fontified nil 522 . 544) (522 . 544) (#("test_pubsub::NodeMsgNo" 0 22 (fontified t face font-lock-string-face)) . 522) (undo-tree-id122 . -22) (undo-tree-id123 . -21) (undo-tree-id124 . -21) (undo-tree-id125 . -13) (undo-tree-id126 . -22) (undo-tree-id127 . -22) (undo-tree-id128 . -22) (undo-tree-id129 . -22) (undo-tree-id130 . -22) (undo-tree-id131 . -22) (undo-tree-id132 . -21) (undo-tree-id133 . -21) (undo-tree-id134 . -22) (undo-tree-id135 . -22) (undo-tree-id136 . -22) (undo-tree-id137 . -22) (undo-tree-id138 . -22) (undo-tree-id139 . -22) (undo-tree-id140 . -22) (undo-tree-id141 . -22) (undo-tree-id142 . -21) (undo-tree-id143 . -13) (undo-tree-id144 . -13) (undo-tree-id145 . -13) (undo-tree-id146 . -13) (undo-tree-id147 . -13) (undo-tree-id148 . -13) (undo-tree-id149 . -13) (undo-tree-id150 . -13) (undo-tree-id151 . -13) (undo-tree-id152 . -13) (undo-tree-id153 . -13) (undo-tree-id154 . -13) (undo-tree-id155 . -13) (undo-tree-id156 . -13) (undo-tree-id157 . -13) (undo-tree-id158 . -13) (undo-tree-id159 . -13) (undo-tree-id160 . -13) (undo-tree-id161 . -13) (undo-tree-id162 . -13) (undo-tree-id163 . -13) (undo-tree-id164 . -13) (undo-tree-id165 . -13) (undo-tree-id166 . -21) (undo-tree-id167 . -21) (undo-tree-id168 . -21) (undo-tree-id169 . -21) (undo-tree-id170 . -21) (undo-tree-id171 . -21) (undo-tree-id172 . -21) (undo-tree-id173 . -22) (undo-tree-id174 . -22) 544 (t 26218 62334 294828 182000)) nil (26218 63839 695138 406000) 0 nil] [nil nil ((nil rear-nonsticky nil 560 . 561) (nil fontified nil 539 . 561) (539 . 561) (#("test_pubsub::NodeMsgNo" 0 22 (fontified nil face font-lock-string-face)) . 539) (undo-tree-id77 . -21) (undo-tree-id78 . -21) (undo-tree-id79 . -3) (undo-tree-id80 . -21) (undo-tree-id81 . -3) (undo-tree-id82 . -3) (undo-tree-id83 . -3) (undo-tree-id84 . -3) (undo-tree-id85 . -3) (undo-tree-id86 . -3) (undo-tree-id87 . -3) (undo-tree-id88 . -3) (undo-tree-id89 . -3) (undo-tree-id90 . -3) (undo-tree-id91 . -3) (undo-tree-id92 . -3) (undo-tree-id93 . -3) (undo-tree-id94 . -3) (undo-tree-id95 . -3) (undo-tree-id96 . -3) (undo-tree-id97 . -3) (undo-tree-id98 . -3) (undo-tree-id99 . -3) (undo-tree-id100 . -22) (undo-tree-id101 . -21) (undo-tree-id102 . -3) (undo-tree-id103 . -3) (undo-tree-id104 . -3) (undo-tree-id105 . -3) (undo-tree-id106 . -3) (undo-tree-id107 . -3) (undo-tree-id108 . -3) (undo-tree-id109 . -21) (undo-tree-id110 . -21) (undo-tree-id111 . -21) (undo-tree-id112 . -21) (undo-tree-id113 . -21) (undo-tree-id114 . -22) (undo-tree-id115 . -22) (498 . 514) (498 . 499) 544 (t 26218 62334 294828 182000)) ((#("
" 0 1 (fontified nil)) . 498) (undo-tree-id116 . -1) (#("                " 0 16 (fontified t)) . 498) (539 . 561) (#("test_pubsub::NodeMsgNo" 0 21 (fontified nil face font-lock-string-face) 21 22 (fontified nil rear-nonsticky nil face font-lock-string-face)) . 539) (undo-tree-id117 . -21) (undo-tree-id118 . -21) (undo-tree-id119 . -22) (undo-tree-id120 . -22) (undo-tree-id121 . -22) (nil rear-nonsticky t 560 . 561)) (26218 63824 311238 783000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 494 . 495) (nil fontified nil 484 . 495) (484 . 495) (#("test_pubsub" 0 11 (fontified t face font-lock-string-face)) . 484) (undo-tree-id175 . -11) (undo-tree-id176 . -10) (undo-tree-id177 . -10) (undo-tree-id178 . -10) (undo-tree-id179 . -10) 495 (t 26218 63839 730663 55000)) nil (26218 64187 415362 25000) 0 nil])
nil
([nil nil ((#("tester" 0 6 (fontified t face font-lock-string-face)) . 569) (undo-tree-id348 . -5) (undo-tree-id349 . -5) (undo-tree-id350 . -5) (undo-tree-id351 . -5) (undo-tree-id352 . -5) (undo-tree-id353 . -6) (undo-tree-id354 . -2) (undo-tree-id355 . -2) (undo-tree-id356 . -2) (undo-tree-id357 . -2) (undo-tree-id358 . -2) (undo-tree-id359 . -2) (undo-tree-id360 . -2) (undo-tree-id361 . -2) (undo-tree-id362 . -2) (undo-tree-id363 . -2) (undo-tree-id364 . -2) (undo-tree-id365 . -2) (undo-tree-id366 . -2) (undo-tree-id367 . -2) (undo-tree-id368 . -2) (undo-tree-id369 . -2) (undo-tree-id370 . -2) (undo-tree-id371 . -2) (undo-tree-id372 . -2) (undo-tree-id373 . -5) (undo-tree-id374 . -5) (undo-tree-id375 . -5) (undo-tree-id376 . -5) (undo-tree-id377 . -5) (undo-tree-id378 . -5) (undo-tree-id379 . -5) (undo-tree-id380 . -5) (undo-tree-id381 . -5) (undo-tree-id382 . -5) (undo-tree-id383 . -5) (undo-tree-id384 . -5) (undo-tree-id385 . -5) (undo-tree-id386 . -5) (undo-tree-id387 . -5) (undo-tree-id388 . -5) (undo-tree-id389 . -5) (undo-tree-id390 . -5) (undo-tree-id391 . -5) (undo-tree-id392 . -5) (undo-tree-id393 . -5) (undo-tree-id394 . -5) (undo-tree-id395 . -5) (undo-tree-id396 . -5) (undo-tree-id397 . -5) (undo-tree-id398 . -5) (undo-tree-id399 . -5) (undo-tree-id400 . -5) (undo-tree-id401 . -5) (undo-tree-id402 . -5) (undo-tree-id403 . -5) (undo-tree-id404 . -5) (undo-tree-id405 . -5) (undo-tree-id406 . -5) (undo-tree-id407 . -5) (undo-tree-id408 . -5) (undo-tree-id409 . -5) (undo-tree-id410 . -5) (undo-tree-id411 . -5) (undo-tree-id412 . -5) (undo-tree-id413 . -6) (t 26218 63886 190072 85000)) nil (26218 64194 242220 910000) 0 nil] [nil nil ((#("tester" 0 6 (fontified t face font-lock-string-face)) . 569) (undo-tree-id266 . -5) (undo-tree-id267 . -5) (undo-tree-id268 . -5) (undo-tree-id269 . -5) (undo-tree-id270 . -5) (undo-tree-id271 . -6) (undo-tree-id272 . -2) (undo-tree-id273 . -2) (undo-tree-id274 . -2) (undo-tree-id275 . -2) (undo-tree-id276 . -2) (undo-tree-id277 . -2) (undo-tree-id278 . -2) (undo-tree-id279 . -2) (undo-tree-id280 . -2) (undo-tree-id281 . -2) (undo-tree-id282 . -2) (undo-tree-id283 . -2) (undo-tree-id284 . -2) (undo-tree-id285 . -2) (undo-tree-id286 . -2) (undo-tree-id287 . -2) (undo-tree-id288 . -2) (undo-tree-id289 . -2) (undo-tree-id290 . -2) (undo-tree-id291 . -5) (undo-tree-id292 . -5) (undo-tree-id293 . -5) (undo-tree-id294 . -5) (undo-tree-id295 . -5) (undo-tree-id296 . -5) (undo-tree-id297 . -5) (undo-tree-id298 . -5) (undo-tree-id299 . -5) (undo-tree-id300 . -5) (undo-tree-id301 . -5) (undo-tree-id302 . -5) (undo-tree-id303 . -5) (undo-tree-id304 . -5) (undo-tree-id305 . -5) (undo-tree-id306 . -5) (undo-tree-id307 . -5) (undo-tree-id308 . -5) (undo-tree-id309 . -5) (undo-tree-id310 . -5) (undo-tree-id311 . -5) (undo-tree-id312 . -5) (undo-tree-id313 . -5) (undo-tree-id314 . -5) (undo-tree-id315 . -5) (undo-tree-id316 . -5) (undo-tree-id317 . -5) (undo-tree-id318 . -5) (undo-tree-id319 . -5) (undo-tree-id320 . -5) (undo-tree-id321 . -5) (undo-tree-id322 . -5) (undo-tree-id323 . -5) (undo-tree-id324 . -5) (undo-tree-id325 . -5) (undo-tree-id326 . -5) (undo-tree-id327 . -5) (undo-tree-id328 . -5) (undo-tree-id329 . -5) (undo-tree-id330 . -5) (undo-tree-id331 . -6) (t 26218 63886 190072 85000)) ((569 . 575)) (26218 64186 133650 612000) 0 nil] [nil nil ((#("tester" 0 6 (fontified t face font-lock-string-face)) . 569) (undo-tree-id195 . -5) (undo-tree-id196 . -5) (undo-tree-id197 . -5) (undo-tree-id198 . -5) (undo-tree-id199 . -5) (undo-tree-id200 . -6) (undo-tree-id201 . -5) (undo-tree-id202 . -5) (undo-tree-id203 . -2) (undo-tree-id204 . -2) (undo-tree-id205 . -2) (undo-tree-id206 . -2) (undo-tree-id207 . -2) (undo-tree-id208 . -2) (undo-tree-id209 . -2) (undo-tree-id210 . -2) (undo-tree-id211 . -2) (undo-tree-id212 . -2) (undo-tree-id213 . -2) (undo-tree-id214 . -2) (undo-tree-id215 . -2) (undo-tree-id216 . -2) (undo-tree-id217 . -2) (undo-tree-id218 . -2) (undo-tree-id219 . -2) (undo-tree-id220 . -2) (undo-tree-id221 . -2) (undo-tree-id222 . -6) (undo-tree-id223 . -5) (undo-tree-id224 . -5) (undo-tree-id225 . -5) (undo-tree-id226 . -5) (undo-tree-id227 . -5) (undo-tree-id228 . -5) (undo-tree-id229 . -5) (undo-tree-id230 . -5) (undo-tree-id231 . -5) (undo-tree-id232 . -5) (undo-tree-id233 . -5) (undo-tree-id234 . -5) (undo-tree-id235 . -5) (undo-tree-id236 . -5) (undo-tree-id237 . -6) 574 (t 26218 63886 190072 85000)) ((569 . 575)) (26218 64180 783379 718000) 0 nil])
([nil nil ((569 . 578)) nil (26218 64194 241775 444000) 0 nil])
([nil nil ((#("                " 0 16 (fontified t)) . -572) (undo-tree-id251 . -16) (undo-tree-id252 . -16) (undo-tree-id253 . -16) (undo-tree-id254 . -16) (undo-tree-id255 . -16) (undo-tree-id256 . -16) (undo-tree-id257 . -16) (undo-tree-id258 . -16) (undo-tree-id259 . -16) (undo-tree-id260 . -16) (undo-tree-id261 . -16) (undo-tree-id262 . -16) (undo-tree-id263 . -16) (undo-tree-id264 . -16) (undo-tree-id265 . -16) 588 (571 . 588) 569) ((#("
                " 0 1 (fontified t) 1 17 (fontified nil)) . 571) (undo-tree-id332 . -17) (undo-tree-id333 . -17) (undo-tree-id334 . -17) (undo-tree-id335 . -17) (undo-tree-id336 . -17) (undo-tree-id337 . -17) (undo-tree-id338 . -17) (undo-tree-id339 . -17) (undo-tree-id340 . -17) (undo-tree-id341 . -17) (undo-tree-id342 . -17) (undo-tree-id343 . -17) (undo-tree-id344 . -17) (undo-tree-id345 . -17) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (572 . 588)) (26218 64186 133165 193000) 0 nil])
([nil nil ((#("                " 0 16 (fontified t)) . -572) (undo-tree-id180 . -16) (undo-tree-id181 . -16) (undo-tree-id182 . -16) (undo-tree-id183 . -16) (undo-tree-id184 . -16) (undo-tree-id185 . -16) (undo-tree-id186 . -16) (undo-tree-id187 . -16) (undo-tree-id188 . -16) (undo-tree-id189 . -16) (undo-tree-id190 . -16) (undo-tree-id191 . -16) (undo-tree-id192 . -16) (undo-tree-id193 . -16) (undo-tree-id194 . -16) 588 (571 . 588) 569) ((#("
                " 0 1 (fontified t) 1 17 (fontified nil)) . 571) (undo-tree-id238 . -17) (undo-tree-id239 . -17) (undo-tree-id240 . -17) (undo-tree-id241 . -17) (undo-tree-id242 . -17) (undo-tree-id243 . -17) (undo-tree-id244 . -17) (undo-tree-id245 . -17) (undo-tree-id246 . -17) (undo-tree-id247 . -17) (undo-tree-id248 . -17) (undo-tree-id249 . -17) (undo-tree-id250 . -17) (572 . 588)) (26218 64180 782478 929000) 0 nil])
([nil nil ((#("NodeMsgNo" 0 9 (fontified t face font-lock-string-face)) . 569) (undo-tree-id414 . -8) (undo-tree-id415 . -6) (undo-tree-id416 . -6) (undo-tree-id417 . -6) (undo-tree-id418 . -6) (undo-tree-id419 . -6) (undo-tree-id420 . -9) (t 26218 64194 279497 468000)) nil (26218 64420 935141 877000) 0 nil])
nil
nil
([nil current ((569 . 575)) nil (26218 64420 935093 521000) 0 nil])
nil
