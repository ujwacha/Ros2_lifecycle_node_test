(undo-tree-save-format-version . 1)
"60f165022f4c5966809dd3e0015f9d404a984569"
[nil nil nil nil (26232 4952 311800 988000) 0 nil]
([nil nil ((nil rear-nonsticky nil 476 . 477) (nil fontified nil 1 . 477) (1 . 477) (t . -1)) nil (26232 4952 311797 491000) 0 nil])
([nil nil ((#("ros2" 0 4 (fontified t face font-lock-string-face)) . 175) (undo-tree-id56 . -3)) nil (26232 4952 311794 191000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-string-face)) . 175)) nil (26232 4952 311786 394000) 0 nil])
([nil nil ((#("tutorials" 0 9 (fontified t face font-lock-string-face)) . 175) (undo-tree-id55 . -8)) nil (26232 4952 311768 880000) 0 nil])
([nil nil ((175 . 189)) nil (26232 4952 311765 135000) 0 nil])
([nil nil ((#("test" 0 4 (fontified t face font-lock-string-face)) . 216) (undo-tree-id54 . -3)) nil (26232 4952 311762 568000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-string-face)) . 216)) nil (26232 4952 311758 326000) 0 nil])
([nil nil ((#("params" 0 6 (fontified t face font-lock-string-face)) . 216) (undo-tree-id53 . -5)) nil (26232 4952 311755 212000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-string-face)) . 216)) nil (26232 4952 311751 390000) 0 nil])
([nil nil ((#("rclcpp" 0 6 (fontified t face font-lock-string-face)) . 216) (undo-tree-id52 . -5)) nil (26232 4952 311749 336000) 0 nil])
([nil nil ((459 . 460)) nil (26232 4952 311745 889000) 0 nil])
([nil nil ((386 . 388) (369 . 386) (t 26232 4932 66721 262000)) nil (26232 4952 311743 847000) 0 nil])
([nil nil ((nil rear-nonsticky nil 388 . 389) (#("
" 0 1 (fontified nil)) . -443) (388 . 444) 386) nil (26232 4952 311740 443000) 0 nil])
([nil nil ((#("                {}
" 0 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-5-face)) 17 18 (fontified t face (rainbow-delimiters-depth-5-face)) 18 19 (fontified t rear-nonsticky t)) . 370) (undo-tree-id3 . -18) (undo-tree-id4 . 2) (undo-tree-id5 . -16) (undo-tree-id6 . -16) (undo-tree-id7 . -16) (undo-tree-id8 . -16) (undo-tree-id9 . -16) (undo-tree-id10 . -16) (undo-tree-id11 . -16) (undo-tree-id12 . -16) (undo-tree-id13 . -16) (undo-tree-id14 . -16) (undo-tree-id15 . -16) (undo-tree-id16 . -16) (undo-tree-id17 . -16) (undo-tree-id18 . -16) (undo-tree-id19 . -16) (undo-tree-id20 . -17) (undo-tree-id21 . -17) (undo-tree-id22 . -17) (undo-tree-id23 . -17) (undo-tree-id24 . -17) (undo-tree-id25 . -17) (undo-tree-id26 . -17) (undo-tree-id27 . -17) (undo-tree-id28 . -16) (undo-tree-id29 . -16) (undo-tree-id30 . -16) (undo-tree-id31 . -16) (undo-tree-id32 . -16) (undo-tree-id33 . -16) (undo-tree-id34 . -16) (undo-tree-id35 . -16) (undo-tree-id36 . -16) (undo-tree-id37 . -19) (undo-tree-id38 . -19) (undo-tree-id39 . -19) (undo-tree-id40 . -19) (undo-tree-id41 . -19) (undo-tree-id42 . -19) (undo-tree-id43 . -19) (undo-tree-id44 . -19) (undo-tree-id45 . -19) (undo-tree-id46 . -19) (undo-tree-id47 . -19) (undo-tree-id48 . -19) (undo-tree-id49 . -19) (undo-tree-id50 . -19) (undo-tree-id51 . -19)) nil (26232 4952 311731 200000) 0 nil])
([nil nil ((370 . 372)) nil (26232 4952 311086 564000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t face (rainbow-delimiters-depth-5-face))) . 371) (undo-tree-id0 . 1) (undo-tree-id1 . -1) (undo-tree-id2 . -1)) nil (26232 4952 311083 457000) 0 nil])
([nil nil ((425 . 426) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-6-face))) . -425) (425 . 426)) nil (26232 4952 311043 55000) 0 nil])
([nil nil ((370 . 386) 425) nil (26232 4952 311031 2000) 0 nil])
([nil nil ((#("                {'my_str': 'Hello Cpp'},
" 0 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-5-face)) 17 25 (fontified t face font-lock-string-face) 25 27 (fontified t) 27 38 (fontified t face font-lock-string-face) 38 39 (fontified t face (rainbow-delimiters-depth-5-face)) 39 41 (fontified t)) . 244) (undo-tree-id163 . -16) (undo-tree-id164 . -40) (undo-tree-id165 . -16) (undo-tree-id166 . -16) (undo-tree-id167 . -39) (undo-tree-id168 . -39) (undo-tree-id169 . -39) (undo-tree-id170 . -39) (undo-tree-id171 . -39) (undo-tree-id172 . -39) (undo-tree-id173 . -39) (undo-tree-id174 . -39) (undo-tree-id175 . -39) (undo-tree-id176 . -39) (undo-tree-id177 . -39) (undo-tree-id178 . -39) (undo-tree-id179 . -39) (undo-tree-id180 . -39) (undo-tree-id181 . -39) (undo-tree-id182 . -39) (undo-tree-id183 . -39) (undo-tree-id184 . -39) (undo-tree-id185 . -41) 283 (t 26232 4952 322629 855000)) nil (26232 4954 702509 466000) 0 nil])
([nil nil ((#("                {'my_int': 12},
" 0 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-5-face)) 17 25 (fontified t face font-lock-string-face) 25 29 (fontified t) 29 30 (fontified t face (rainbow-delimiters-depth-5-face)) 30 31 (fontified t) 31 32 (fontified t)) . 244) (undo-tree-id133 . -31) (undo-tree-id134 . -30) (undo-tree-id135 . -30) (undo-tree-id136 . -30) (undo-tree-id137 . -30) (undo-tree-id138 . -30) (undo-tree-id139 . -30) (undo-tree-id140 . -30) (undo-tree-id141 . -30) (undo-tree-id142 . -31) (undo-tree-id143 . -30) (undo-tree-id144 . -30) (undo-tree-id145 . -30) (undo-tree-id146 . -30) (undo-tree-id147 . -30) (undo-tree-id148 . -30) (undo-tree-id149 . -30) (undo-tree-id150 . -30) (undo-tree-id151 . -30) (undo-tree-id152 . -30) (undo-tree-id153 . -30) (undo-tree-id154 . -30) (undo-tree-id155 . -30) (undo-tree-id156 . -30) (undo-tree-id157 . -30) (undo-tree-id158 . -30) (undo-tree-id159 . -30) (undo-tree-id160 . -30) (undo-tree-id161 . -30) (undo-tree-id162 . -32) 274) nil (26232 4954 702466 257000) 0 nil])
([nil nil ((#("                {'my_double_array': [3.3, 4.4, 5.5]}
" 0 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-5-face)) 17 34 (fontified t face font-lock-string-face) 34 36 (fontified t) 36 37 (fontified t face (rainbow-delimiters-depth-6-face)) 37 50 (fontified t) 50 51 (fontified t face (rainbow-delimiters-depth-6-face)) 51 52 (fontified t face (rainbow-delimiters-depth-5-face)) 52 53 (fontified t)) . 244) (undo-tree-id57 . -52) (undo-tree-id58 . -53) (undo-tree-id59 . -53) (undo-tree-id60 . -53) (undo-tree-id61 . -53) (undo-tree-id62 . -53) (undo-tree-id63 . -53) (undo-tree-id64 . -53) (undo-tree-id65 . -53) (undo-tree-id66 . -53) (undo-tree-id67 . -53) (undo-tree-id68 . -53) (undo-tree-id69 . -53) (undo-tree-id70 . -53) (undo-tree-id71 . -53) (undo-tree-id72 . -53) (undo-tree-id73 . -53) (undo-tree-id74 . -53) (undo-tree-id75 . -53) (undo-tree-id76 . -53) (undo-tree-id77 . -53) (undo-tree-id78 . -53) (undo-tree-id79 . -53) (undo-tree-id80 . -53) (undo-tree-id81 . -53) (undo-tree-id82 . -53) (undo-tree-id83 . -53) (undo-tree-id84 . -53) (undo-tree-id85 . -53) (undo-tree-id86 . -53) (undo-tree-id87 . -53) (undo-tree-id88 . -53) (undo-tree-id89 . -53) (undo-tree-id90 . -53) (undo-tree-id91 . -53) (undo-tree-id92 . -53) (undo-tree-id93 . -53) (undo-tree-id94 . -53) (undo-tree-id95 . -53) (undo-tree-id96 . -53) (undo-tree-id97 . -53) (undo-tree-id98 . -53) (undo-tree-id99 . -53) (undo-tree-id100 . -53) (undo-tree-id101 . -53) (undo-tree-id102 . -53) (undo-tree-id103 . -53) (undo-tree-id104 . -30) (undo-tree-id105 . -51) (undo-tree-id106 . -51) (undo-tree-id107 . -51) (undo-tree-id108 . -51) (undo-tree-id109 . -51) (undo-tree-id110 . -51) (undo-tree-id111 . -51) (undo-tree-id112 . -52) (undo-tree-id113 . -30) (undo-tree-id114 . -30) (undo-tree-id115 . -30) (undo-tree-id116 . -30) (undo-tree-id117 . -30) (undo-tree-id118 . -30) (undo-tree-id119 . -30) (undo-tree-id120 . -30) (undo-tree-id121 . -30) (undo-tree-id122 . -30) (undo-tree-id123 . -30) (undo-tree-id124 . -30) (undo-tree-id125 . -30) (undo-tree-id126 . -30) (undo-tree-id127 . -30) (undo-tree-id128 . -30) (undo-tree-id129 . -30) (undo-tree-id130 . -30) (undo-tree-id131 . -30) (undo-tree-id132 . -53) 274) nil (26232 4954 702392 70000) 0 nil])
([nil nil ((nil rear-nonsticky nil 234 . 235) (nil fontified nil 216 . 235) (216 . 235) 215 (t 26232 4954 738619 372000)) nil (26232 5831 659652 607000) 0 nil])
([nil nil ((280 . 282) (#("\"" 0 1 (face (rainbow-delimiters-depth-5-face) fontified nil)) . -280) (280 . 281)) nil (26232 5837 140092 588000) 0 nil] [nil nil ((#("lifecycles" 0 10 (fontified t)) . 280) (undo-tree-id4 . -5) (undo-tree-id6 . -5) (undo-tree-id8 . -5) (undo-tree-id10 . -10) (undo-tree-id11 . -9) (t 26232 5112 706105 742000)) ((280 . 290)) (26232 5831 220493 673000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . 280) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1)) nil (26232 5837 140086 690000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 280)) ((280 . 281)) (26232 5830 679092 854000) 0 nil])
([nil nil ((296 . 297) (#("\"" 0 1 (face font-lock-string-face fontified nil)) . -296) (296 . 297)) nil (26232 10211 981209 621000) 0 nil])
([nil nil ((#("list" 0 4 (face font-lock-builtin-face fontified t)) . 280) (undo-tree-id0 . -3)) ((280 . 284)) (26232 5830 100324 20000) 0 nil])
([nil nil ((#("ujwol" 0 5 (face font-lock-string-face fontified t)) . 301) (undo-tree-id198 . -4) (undo-tree-id199 . -5) (t 26232 5837 150346 509000)) nil (26232 10215 332730 693000) 0 nil] [nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . 300) (undo-tree-id197 . -1) (t 26232 5837 150346 509000)) ((300 . 301)) (26232 10211 980704 675000) 0 nil])
([nil nil ((280 . 286)) ((#("lilist" 0 6 (fontified t)) . 280) (undo-tree-id106 . -6) (undo-tree-id107 . -6) (undo-tree-id108 . -6) (undo-tree-id109 . -6) (undo-tree-id110 . -6) (undo-tree-id111 . -6) (undo-tree-id112 . -6) (undo-tree-id113 . -6) (undo-tree-id114 . -6) (undo-tree-id115 . -6) (undo-tree-id116 . -6) (undo-tree-id117 . -6) (undo-tree-id118 . -6) (undo-tree-id119 . -6) (undo-tree-id120 . -6) (undo-tree-id121 . -6) (undo-tree-id122 . -6) (undo-tree-id123 . -6) (undo-tree-id124 . -6) (undo-tree-id125 . -6) (undo-tree-id126 . -6) (undo-tree-id127 . -6) (undo-tree-id128 . -6) (undo-tree-id129 . -6) (undo-tree-id130 . -6) (undo-tree-id131 . -6) (undo-tree-id132 . -6) (undo-tree-id133 . -6) (undo-tree-id134 . -6) (undo-tree-id135 . -6) (undo-tree-id136 . -6) (undo-tree-id137 . -6) (undo-tree-id138 . -6) (undo-tree-id139 . -6) (undo-tree-id140 . -6) (undo-tree-id141 . -6) (undo-tree-id142 . -6) (undo-tree-id143 . -6) (undo-tree-id144 . -6) (undo-tree-id145 . -6) (undo-tree-id146 . -6) (undo-tree-id147 . -6) (undo-tree-id148 . -6) (undo-tree-id149 . -6) (undo-tree-id150 . -6) (undo-tree-id151 . -6) (undo-tree-id152 . -6) (undo-tree-id153 . -6) (undo-tree-id154 . -6) (undo-tree-id155 . -6) (undo-tree-id156 . -6) (undo-tree-id157 . -6) (undo-tree-id158 . -6) (undo-tree-id159 . -6) (undo-tree-id160 . -6) (undo-tree-id161 . -6) (undo-tree-id162 . -6) (undo-tree-id163 . -6) (undo-tree-id164 . -6) (undo-tree-id165 . -6) (undo-tree-id166 . -6) (undo-tree-id167 . -6) (undo-tree-id168 . -6) (undo-tree-id169 . -6) (undo-tree-id170 . -6) (undo-tree-id171 . -6) (undo-tree-id172 . -6) (undo-tree-id173 . -6) (undo-tree-id174 . -6) (undo-tree-id175 . -6) (undo-tree-id176 . -6) (undo-tree-id177 . -6) (undo-tree-id178 . -6) (undo-tree-id179 . -6) (undo-tree-id180 . -6) (undo-tree-id181 . -6) (undo-tree-id182 . -6) (undo-tree-id183 . -6) (undo-tree-id184 . -6) (undo-tree-id185 . -6) (undo-tree-id186 . -6)) (26232 5829 608250 152000) 0 nil])
([nil nil ((301 . 309)) nil (26232 10215 332702 305000) 0 nil])
nil
([nil nil ((280 . 282) (#("\"" 0 1 (face (rainbow-delimiters-depth-5-face) fontified nil)) . -280) (280 . 281) (t 26232 5630 998004 230000)) ((#("\"" 0 1 (face (rainbow-delimiters-depth-5-face) fontified nil)) . 280) (280 . 281) (#("\"\"" 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t)) . 280) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1)) (26232 5829 79817 69000) 0 nil])
([nil nil ((nil rear-nonsticky nil 330 . 331) (nil fontified nil 313 . 331) (313 . 331) (#("Acharya" 0 7 (face font-lock-string-face fontified t)) . 313) (undo-tree-id263 . -6) (undo-tree-id264 . -7) (undo-tree-id265 . -1) (undo-tree-id266 . -6) (undo-tree-id267 . -6) (undo-tree-id268 . -7) (undo-tree-id269 . -6) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -7) (undo-tree-id281 . -7) 320 (t 26232 10215 341044 64000)) nil (26232 10273 407834 7000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . 281) (undo-tree-id12 . 1) (undo-tree-id14 . -1)) ((281 . 282)) (26232 5828 702893 968000) 0 nil])
([nil nil ((#("awesome" 0 7 (face font-lock-string-face fontified t)) . 341) (undo-tree-id261 . -6) (undo-tree-id262 . -7)) nil (26232 10273 407763 897000) 0 nil])
([nil nil ((287 . 289) (#("\"" 0 1 (face font-lock-string-face fontified nil)) . -287) (287 . 288)) ((#("\"" 0 1 (face font-lock-string-face fontified nil)) . 287) (287 . 288) (#("\" " 0 1 (face font-lock-string-face fontified t) 1 2 (fontified t)) . 287) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (t 26232 5647 882026 723000)) (26232 5647 873244 744000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . 340) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1)) nil (26232 10273 407756 155000) 0 nil])
nil
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . 340) (undo-tree-id238 . -1) (undo-tree-id239 . -1)) nil (26232 16039 643974 896000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 338)) ((338 . 339)) (26232 16040 551519 441000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 338)) ((338 . 339)) (26232 16040 833464 207000) 0 nil])
([nil nil ((nil rear-nonsticky nil 341 . 342) (335 . 342) (#("is" 0 2 (face font-lock-string-face fontified t)) . 335) (undo-tree-id454 . -1) (undo-tree-id455 . -2) (undo-tree-id456 . -2) (undo-tree-id457 . -2) (undo-tree-id458 . -2) (undo-tree-id459 . -2) (undo-tree-id460 . -2) (undo-tree-id461 . -2) (undo-tree-id462 . -2) (undo-tree-id463 . -2) (undo-tree-id464 . -2) (undo-tree-id465 . -2) (undo-tree-id466 . -2) (undo-tree-id467 . -2) (undo-tree-id468 . -2)) ((335 . 337) (#("PraNode" 0 6 (face font-lock-string-face fontified nil) 6 7 (face font-lock-string-face rear-nonsticky nil fontified nil)) . 335) (undo-tree-id450 . -6) (undo-tree-id451 . -6) (undo-tree-id452 . -6) (undo-tree-id453 . -6) (nil rear-nonsticky t 341 . 342)) (26232 16041 150952 770000) 0 nil])
([nil nil ((#("LifeNode" 0 8 (face font-lock-string-face fontified t)) . 301) (undo-tree-id469 . -7) (undo-tree-id470 . -7) (t 26232 16042 275908 402000)) ((301 . 309)) (26232 16688 845221 604000) 0 nil])
([nil nil ((301 . 307)) ((#("talker" 0 6 (face font-lock-string-face fontified t)) . 301)) (26232 16689 99584 574000) 0 nil])
([nil nil ((#("minimal" 0 7 (face font-lock-string-face fontified t)) . 311)) ((311 . 318)) (26232 16689 292213 703000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-string-face fontified t)) . 311)) ((311 . 312)) (26232 16689 504628 899000) 0 nil])
([nil nil ((#("subscriber" 0 9 (face font-lock-string-face fontified t) 9 10 (face font-lock-string-face rear-nonsticky t fontified t)) . 311)) ((311 . 321)) (26232 16689 721990 416000) 0 nil])
([nil nil ((311 . 319)) ((#("listene" 0 7 (face font-lock-string-face fontified nil)) . 311) (#("r" 0 1 (face font-lock-string-face fontified t)) . 318)) (26232 16690 30948 226000) 0 nil])
([nil nil ((#("PraNode" 0 6 (face font-lock-string-face fontified t) 6 7 (face font-lock-string-face rear-nonsticky t fontified t)) . 323) (undo-tree-id471 . -6) (undo-tree-id472 . -6) (undo-tree-id473 . -6) (undo-tree-id474 . -6)) ((323 . 330)) (26232 16690 330627 940000) 0 nil])
([nil nil ((323 . 333)) ((#("lifetalker" 0 10 (face font-lock-string-face fontified t)) . 323) (undo-tree-id326 . -9) (undo-tree-id328 . -9) (undo-tree-id330 . -9) (undo-tree-id332 . -9) (undo-tree-id334 . -9) (undo-tree-id336 . -9) (undo-tree-id338 . -9) (undo-tree-id340 . -9) (undo-tree-id342 . -9) (undo-tree-id344 . -9) (undo-tree-id346 . -9) (undo-tree-id348 . -9) (undo-tree-id350 . -9) (undo-tree-id352 . -9) (undo-tree-id354 . -9) (undo-tree-id356 . -9) (undo-tree-id358 . -9) (undo-tree-id360 . -9) (undo-tree-id362 . -9) (undo-tree-id364 . -9) (undo-tree-id366 . -9) (undo-tree-id368 . -9) (undo-tree-id370 . -9) (undo-tree-id372 . -9) (undo-tree-id374 . -9) (undo-tree-id376 . -9) (undo-tree-id378 . -9) (undo-tree-id380 . -9) (undo-tree-id382 . -9) (undo-tree-id384 . -9) (undo-tree-id386 . -9) (undo-tree-id388 . -9) (undo-tree-id390 . -9) (undo-tree-id392 . -9) (undo-tree-id394 . -9) (undo-tree-id396 . -9) (undo-tree-id398 . -9) (undo-tree-id400 . -9) (undo-tree-id402 . -9) (undo-tree-id404 . -9) (undo-tree-id406 . -9) (undo-tree-id408 . -9) (undo-tree-id410 . -9) (undo-tree-id412 . -9) (undo-tree-id414 . -9) (undo-tree-id416 . -9) (undo-tree-id418 . -9) (undo-tree-id420 . -9) (undo-tree-id422 . -9) (undo-tree-id424 . -9) (undo-tree-id426 . -9) (undo-tree-id428 . -9) (undo-tree-id430 . -9) (undo-tree-id432 . -9) (undo-tree-id434 . -9) (undo-tree-id436 . -9) (undo-tree-id438 . -9) (undo-tree-id440 . -9) (undo-tree-id442 . -9) (undo-tree-id444 . -9) (undo-tree-id446 . -9) (undo-tree-id448 . -9) (t 26232 10595 347584 540000)) (26232 16690 630628 726000) 0 nil])
([nil nil ((nil rear-nonsticky nil 352 . 353) (#("
" 0 1 (fontified nil)) . -410) (336 . 411) 323 (t 26232 16691 723633 998000)) nil (26232 27936 368199 811000) 0 nil])
([nil nil ((279 . 280)) nil (26232 27936 368195 280000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . 397) (undo-tree-id481 . -1)) nil (26232 27936 368192 858000) 0 nil])
([nil nil ((#("lifetalker" 0 10 (fontified t)) . 397) (undo-tree-id479 . -9) (undo-tree-id480 . -10)) nil (26232 27936 368185 416000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . 397) (undo-tree-id477 . -1) (undo-tree-id478 . -1)) nil (26232 27936 367806 185000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 395) (undo-tree-id475 . -1) (undo-tree-id476 . -1)) nil (26232 27936 367792 975000) 0 nil])
([nil nil ((338 . 339) (t 26232 27936 378247 650000)) nil (26232 29115 954982 308000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 279) (undo-tree-id482 . -1) (undo-tree-id483 . -1)) nil (26232 29115 954968 449000) 0 nil])
([nil nil ((#("everything" 0 10 (fontified t face font-lock-string-face)) . 216) (undo-tree-id135 . -4) (undo-tree-id136 . -4) (undo-tree-id137 . -4) (undo-tree-id138 . -4) (undo-tree-id139 . -4) (undo-tree-id140 . -10) (undo-tree-id141 . -9) (t 26232 29115 964180 947000)) nil (26236 26785 586047 383000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-string-face)) . 216) (undo-tree-id134 . -1)) nil (26236 26785 586035 819000) 0 nil])
([nil nil ((#("launcher" 0 8 (fontified t face font-lock-string-face)) . 216) (undo-tree-id132 . -7) (undo-tree-id133 . -8)) nil (26236 26785 586032 252000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-string-face)) . -216) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -217) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -218) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) 219 (216 . 219)) nil (26236 26785 586014 555000) 0 nil])
([nil nil ((nil rear-nonsticky nil 233 . 234) (nil fontified nil 216 . 234) (216 . 234) 215) nil (26236 26785 585415 745000) 0 nil])
([nil nil ((#("lifetalker" 0 10 (fontified t face font-lock-string-face)) . 322) (undo-tree-id190 . -9) (undo-tree-id191 . -10) (t 26236 26785 615774 528000)) nil (26236 27441 500590 264000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 321) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1)) nil (26236 27441 500579 651000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 321) (undo-tree-id172 . -1) (undo-tree-id173 . -1)) nil (26236 27441 500175 155000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 319) (undo-tree-id170 . -1) (undo-tree-id171 . -1)) nil (26236 27441 500168 430000) 0 nil])
([nil current ((#(" " 0 1 (fontified t)) . 319) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1)) nil (26236 27441 500152 189000) 0 nil])
nil
